{"mappings":"YAWA,IAAMA,EAAO,CACXC,SAAUC,SAASC,cAAc,gBACjCC,YAAaF,SAASC,cAAc,aACpCE,cAAeH,SAASC,cAAc,gBACtCG,UAAWJ,SAASC,cAAc,8BAGpCH,EAAKC,SAASM,iBAAiB,SAI/B,WACEC,GAAe,EACf,IAAMC,EAAWC,OAAOC,IAAIC,GAE5BC,EAAkB,IAClBC,EAAoB,iBAKGC,EAJPN,EAKhBO,QAAQC,KAAKF,GAASG,MAAK,SAAAC,G,IAAGC,EAAKD,EAALC,MAAOC,EAAIF,EAAJE,KACnCR,EAAkB,WAAyCS,OAAvBF,EAAM,mBAAiCE,OAALD,IACpDE,mBAAC,CAAEH,QAAOC,OAAMG,YAAAhB,G,IAItC,SAAoBO,GAClBC,QAAQS,IAAIV,GAASG,MAAK,WACxBJ,EAAqB,kB,IAZvBY,CAAWjB,GAGb,IAAyBM,C,IAZzB,IAAIP,EAAc,EAyBlB,SAASK,EAAkBc,GACzB3B,EAAKI,YAAYwB,YAAcD,C,CAGjC,SAASb,EAAoBa,GAC3B3B,EAAKK,cAAcuB,YAAcD,C,CAYnC,SAASf,EAAIQ,GACX,OAAO,IAAIJ,SAAQ,SAACa,EAASC,GAC3B,IAAMT,EAAOU,cAAc,IAAM,MACjCC,YAAW,WACTH,EAAQ,CAAET,QAAOC,Q,GAChBA,E,IAIPL,QAAQS,IAAIQ,UAAUf,MAAK,WACzBgB,QAAQC,IAAI,W,IAGdvB,EAAI,SAASM,MAAK,SAAAkB,G,OAAKF,QAAQC,IAAIC,E","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    resolve('promise successfully commited');\n  } else {\n    // Reject\n    reject('promise failed to commit');\n  }\n}\n\nconst refs = {\n  startBtn: document.querySelector('.js-startBtn'),\n  winnerField: document.querySelector('js-winner'),\n  progressField: document.querySelector('.js-progress'),\n  tableBody: document.querySelector('.js-results-table > tbody'),\n};\n\nrefs.startBtn.addEventListener('click', onStart);\n\nlet raceCounter = 0;\n\nfunction onStart() {\n  raceCounter += 1;\n  const promises = horses.map(run);\n\n  updateWinnerField('');\n  updateProgressField('заїзд почався');\n  determineWinner(promises);\n  waitForAll(promises);\n}\n\nfunction determineWinner(horsesP) {\n  Promise.race(horsesP).then(({ horse, time }) => {\n    updateWinnerField(`Переміг ${horse}, прийшовши за ${time}`);\n    updateTableResults({ horse, time, raceCounter });\n  });\n}\n\nfunction waitForAll(horsesP) {\n  Promise.all(horsesP).then(() => {\n    updateProgressField(`заїзд завершено`);\n  });\n}\n\nfunction updateWinnerField(message) {\n  refs.winnerField.textContent = message;\n}\n\nfunction updateProgressField(message) {\n  refs.progressField.textContent = message;\n}\n\n// function updateTableResults({ horse, time, raceCounter }) {\n//   const tr = (\n//     <tr>\n//       <td>8</td>\n//     </tr>\n//   );\n//   refs.tableBody.insertAdjacentHTML('beforeend', tr);\n// }\n\nfunction run(horse) {\n  return new Promise((resolve, reject) => {\n    const time = getRandomTime(2000, 3500);\n    setTimeout(() => {\n      resolve({ horse, time });\n    }, time);\n  });\n}\n\nPromise.all(promises).then(() => {\n  console.log('promises');\n});\n\nrun('Mango').then(x => console.log(x));\n\nconst makeOrder = dish => {\n  const DELAY = 1000;\n\n  return new createPromise((resolve, reject) => {\n    const passed = Math.random() > 0.5;\n\n    setTimeout(() => {\n      if (passed) {\n        resolve('ват ваш заказ:${dish}');\n      }\n      reject('нет продуктов');\n    }, DELAY);\n  });\n};\n//   }\n//     .then(onFulfilled)\n//     .then(x => {\n//       console.log(x);\n//     })\n//     .then(y => {\n//       console.log(y);\n//     })\n//     .catch(error => console.log(error))\n//     .finally(() => console.log('committed anyway'));\n\n//  }\n"],"names":["$ce04d3a99e08e73b$var$refs","startBtn","document","querySelector","winnerField","progressField","tableBody","addEventListener","$ce04d3a99e08e73b$var$raceCounter","_$promises","horses","map","$ce04d3a99e08e73b$var$run","$ce04d3a99e08e73b$var$updateWinnerField","$ce04d3a99e08e73b$var$updateProgressField","horsesP","Promise","race","then","param","horse","time","concat","updateTableResults","raceCounter","all","$ce04d3a99e08e73b$var$waitForAll","message","textContent","resolve","reject","getRandomTime","setTimeout","promises","console","log","x"],"version":3,"file":"03-promises.19100dbb.js.map"}