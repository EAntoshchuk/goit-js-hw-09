{"mappings":"AAWA,MAAMA,EAAO,CACXC,SAAUC,SAASC,cAAc,gBACjCC,YAAaF,SAASC,cAAc,aACpCE,cAAeH,SAASC,cAAc,gBACtCG,UAAWJ,SAASC,cAAc,8BAGpCH,EAAKC,SAASM,iBAAiB,SAI/B,WACEC,GAAe,EACf,MAAMC,EAAWC,OAAOC,IAAIC,GAE5BC,EAAkB,IAClBC,EAAoB,iBAKGC,EAJPN,EAKhBO,QAAQC,KAAKF,GAASG,MAAK,EAACC,MAAEA,EAAKC,KAAEA,MACnCP,EAAkB,WAACM,mBAAuBC,KACxBC,mBAAC,C,MAAEF,E,KAAOC,E,YAAMZ,GAAc,IAIpD,SAAoBO,GAClBC,QAAQM,IAAIP,GAASG,MAAK,KACxBJ,EAAoB,kBAAC,G,CAZvBS,CAAWd,GAGb,IAAyBM,C,IAZzB,IAAIP,EAAc,EAyBlB,SAASK,EAAkBW,GACzBxB,EAAKI,YAAYqB,YAAcD,C,CAGjC,SAASV,EAAoBU,GAC3BxB,EAAKK,cAAcoB,YAAcD,C,CAYnC,SAASZ,EAAIO,GACX,OAAO,IAAIH,SAAQ,CAACU,EAASC,KAC3B,MAAMP,EAAOQ,cAAc,IAAM,MACjCC,YAAW,KACTH,EAAQ,C,MAAEP,E,KAAOC,GAAO,GACvBA,EAAK,G,CAIZJ,QAAQM,IAAIb,UAAUS,MAAK,KACzBY,QAAQC,IAAI,WAAW,IAGzBnB,EAAI,SAASM,MAAKc,GAAKF,QAAQC,IAAIC","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    resolve('promise successfully commited');\n  } else {\n    // Reject\n    reject('promise failed to commit');\n  }\n}\n\nconst refs = {\n  startBtn: document.querySelector('.js-startBtn'),\n  winnerField: document.querySelector('js-winner'),\n  progressField: document.querySelector('.js-progress'),\n  tableBody: document.querySelector('.js-results-table > tbody'),\n};\n\nrefs.startBtn.addEventListener('click', onStart);\n\nlet raceCounter = 0;\n\nfunction onStart() {\n  raceCounter += 1;\n  const promises = horses.map(run);\n\n  updateWinnerField('');\n  updateProgressField('заїзд почався');\n  determineWinner(promises);\n  waitForAll(promises);\n}\n\nfunction determineWinner(horsesP) {\n  Promise.race(horsesP).then(({ horse, time }) => {\n    updateWinnerField(`Переміг ${horse}, прийшовши за ${time}`);\n    updateTableResults({ horse, time, raceCounter });\n  });\n}\n\nfunction waitForAll(horsesP) {\n  Promise.all(horsesP).then(() => {\n    updateProgressField(`заїзд завершено`);\n  });\n}\n\nfunction updateWinnerField(message) {\n  refs.winnerField.textContent = message;\n}\n\nfunction updateProgressField(message) {\n  refs.progressField.textContent = message;\n}\n\n// function updateTableResults({ horse, time, raceCounter }) {\n//   const tr = (\n//     <tr>\n//       <td>8</td>\n//     </tr>\n//   );\n//   refs.tableBody.insertAdjacentHTML('beforeend', tr);\n// }\n\nfunction run(horse) {\n  return new Promise((resolve, reject) => {\n    const time = getRandomTime(2000, 3500);\n    setTimeout(() => {\n      resolve({ horse, time });\n    }, time);\n  });\n}\n\nPromise.all(promises).then(() => {\n  console.log('promises');\n});\n\nrun('Mango').then(x => console.log(x));\n\nconst makeOrder = dish => {\n  const DELAY = 1000;\n\n  return new createPromise((resolve, reject) => {\n    const passed = Math.random() > 0.5;\n\n    setTimeout(() => {\n      if (passed) {\n        resolve('ват ваш заказ:${dish}');\n      }\n      reject('нет продуктов');\n    }, DELAY);\n  });\n};\n//   }\n//     .then(onFulfilled)\n//     .then(x => {\n//       console.log(x);\n//     })\n//     .then(y => {\n//       console.log(y);\n//     })\n//     .catch(error => console.log(error))\n//     .finally(() => console.log('committed anyway'));\n\n//  }\n"],"names":["$47d4ff9957288465$var$refs","startBtn","document","querySelector","winnerField","progressField","tableBody","addEventListener","$47d4ff9957288465$var$raceCounter","promises","horses","map","$47d4ff9957288465$var$run","$47d4ff9957288465$var$updateWinnerField","$47d4ff9957288465$var$updateProgressField","horsesP","Promise","race","then","horse","time","updateTableResults","all","$47d4ff9957288465$var$waitForAll","message","textContent","resolve","reject","getRandomTime","setTimeout","console","log","x"],"version":3,"file":"03-promises.d6b13985.js.map"}