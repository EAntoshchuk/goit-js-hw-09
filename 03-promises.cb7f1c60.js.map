{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,iBAAkBC,SAASC,cAAc,yBACzCC,QAASF,SAASC,cAAc,uBAChCE,OAAQH,SAASC,cAAc,sBAC/BG,SAAUJ,SAASC,cAAc,yBAKnC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAEFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAGtDG,EAAO,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,IAbPT,EAAKC,iBAAiBiB,iBAAiB,SAiBvC,SAAiBC,GACfA,EAAEC,iBACFX,MAAQY,OAAOrB,EAAKI,QAAQkB,OAC5BC,KAAOF,OAAOrB,EAAKK,OAAOiB,OAC1BE,OAASH,OAAOrB,EAAKM,SAASgB,OAC9BG,QAAQC,IAAIjB,OAEZ,IAAK,IAAIkB,EAAI,EAAGA,GAAKH,OAAQG,GAAK,EAChCpB,EAAcoB,EAAGlB,OACdmB,MAAK,SAAAjB,G,OAAWkB,EAAA/B,GAASgC,OAAOC,QAAQpB,E,IACxCqB,OAAM,SAAApB,G,OAAUiB,EAAA/B,GAASgC,OAAOG,QAAQrB,E,IAC3CH,OAASc,I","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  createPromiseBtn: document.querySelector('button[type=\"submit\"]'),\n  delayEl: document.querySelector('input[name=\"delay\"]'),\n  stepEl: document.querySelector('input[name=\"step\"]'),\n  amountEl: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.createPromiseBtn.addEventListener('click', onClick);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        // Reject\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\nfunction onClick(e) {\n  e.preventDefault();\n  delay = Number(refs.delayEl.value);\n  step = Number(refs.stepEl.value);\n  amount = Number(refs.amountEl.value);\n  console.log(delay);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(resolve => Notiflix.Notify.success(resolve))\n      .catch(reject => Notiflix.Notify.failure(reject));\n    delay += step;\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","createPromiseBtn","document","querySelector","delayEl","stepEl","amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","addEventListener","e","preventDefault","Number","value","step","amount","console","log","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.cb7f1c60.js.map"}