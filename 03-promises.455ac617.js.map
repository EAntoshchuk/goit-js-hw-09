{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,iBAAkBC,SAASC,cAAc,yBACzCC,QAASF,SAASC,cAAc,uBAChCE,OAAQH,SAASC,cAAc,sBAC/BG,SAAUJ,SAASC,cAAc,yBAKnC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EAEFF,EAAQ,uBAAqBH,QAAiBC,OAG9CG,EAAO,sBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,G,CAbbT,EAAKC,iBAAiBgB,iBAAiB,SAiBvC,SAAiBC,GACfA,EAAEC,iBACFV,MAAQW,OAAOpB,EAAKI,QAAQiB,OAC5BC,KAAOF,OAAOpB,EAAKK,OAAOgB,OAC1BE,OAASH,OAAOpB,EAAKM,SAASe,OAC9BG,QAAQC,IAAIhB,OAEZ,IAAK,IAAIiB,EAAI,EAAGA,GAAKH,OAAQG,GAAK,EAChCnB,EAAcmB,EAAGjB,OACdkB,MAAKhB,GAAWiB,EAAA9B,GAAS+B,OAAOC,QAAQnB,KACxCoB,OAAMnB,GAAUgB,EAAA9B,GAAS+B,OAAOG,QAAQpB,KAC3CH,OAASa,I","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  createPromiseBtn: document.querySelector('button[type=\"submit\"]'),\n  delayEl: document.querySelector('input[name=\"delay\"]'),\n  stepEl: document.querySelector('input[name=\"step\"]'),\n  amountEl: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.createPromiseBtn.addEventListener('click', onClick);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        // Reject\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\nfunction onClick(e) {\n  e.preventDefault();\n  delay = Number(refs.delayEl.value);\n  step = Number(refs.stepEl.value);\n  amount = Number(refs.amountEl.value);\n  console.log(delay);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(resolve => Notiflix.Notify.success(resolve))\n      .catch(reject => Notiflix.Notify.failure(reject));\n    delay += step;\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","createPromiseBtn","document","querySelector","delayEl","stepEl","amountEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","Number","value","step","amount","console","log","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.455ac617.js.map"}